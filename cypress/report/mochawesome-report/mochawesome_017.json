{
  "stats": {
    "suites": 0,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-08-02T06:40:35.700Z",
    "end": "2023-08-02T06:40:36.124Z",
    "duration": 424,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "04872706-b331-4ba2-9ace-8f4e55b03936",
      "title": "",
      "fullFile": "cypress\\e2e\\assertion.cy.js",
      "file": "cypress\\e2e\\assertion.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "assertion",
          "fullTitle": "assertion",
          "timedOut": null,
          "duration": 364,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "//navigate to url\ncy.visit('https://example.cypress.io');\n//get the element\ncy.contains('get').click();\n//get the button element and check whether the text 'Button' is present or not\ncy.get('#query-btn').should('contain', 'Button').and('have.class', 'query-btn btn btn-primary').and('be.visible').and('be.enabled');\n//explicit asssertion only show the log when it is fail, if the assertion will pass it won't show the log\n//check 4 and 5 are equal, if not equal then print 'Not Equal'\nassert.equal(4, 5, 'Not Equal');\nassert.equal(4, 4, 'Not Equal');\n//we compare the integer and string, in equal() it will pass \nassert.equal(4, '4', 'Not Equal');\n//but in strictequal() it will fail\nassert.strictEqual(4, '4', 'Not Equal');",
          "err": {
            "message": "AssertionError: Not Equal: expected 4 to equal 5",
            "estack": "AssertionError: Not Equal: expected 4 to equal 5\n    at Context.eval (webpack:///./cypress/e2e/assertion.cy.js:16:15)",
            "diff": "- 4\n+ 5\n"
          },
          "uuid": "b64b2e50-7079-496c-a163-d35effc04cfa",
          "parentUUID": "04872706-b331-4ba2-9ace-8f4e55b03936",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "b64b2e50-7079-496c-a163-d35effc04cfa"
      ],
      "pending": [],
      "skipped": [],
      "duration": 364,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report"
      },
      "version": "6.2.0"
    }
  }
}